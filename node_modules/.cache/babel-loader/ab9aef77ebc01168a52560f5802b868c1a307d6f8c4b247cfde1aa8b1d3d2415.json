{"ast":null,"code":"var _jsxFileName = \"/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CurrentWeather from './Components/CurrentWeather';\nimport SevenDayForecast from './Components/SevenDayForecast';\nimport './Styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { famousPlaces } from './utils/famousPlaceCoodinates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomPlace = () => {\n  const randomIndex = Math.floor(Math.random() * famousPlaces.length);\n  return famousPlaces[randomIndex];\n};\nconst App = () => {\n  _s();\n  const randomPlace = getRandomPlace();\n  const [lat, setLat] = useState(randomPlace.lat);\n  const [lon, setLon] = useState(randomPlace.lon);\n  const [error, setError] = useState(null);\n  const handleLocationChange = async () => {\n    try {\n      const response = await fetch(`https://api.geoapify.com/v1/ipinfo?apiKey=${process.env.REACT_APP_REVERSE_GEOCODING_API_KEY}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch geolocation data');\n      }\n      const data = await response.json();\n      const latitude = data.location.lat;\n      const longitude = data.location.lon;\n      setLat(latitude);\n      setLon(longitude);\n      updateInputs(latitude, longitude);\n    } catch (error) {\n      setError(\"Geolocation is not supported by your mobile browser. Weather from a random location will be displayed instead. Click the Get Location button to change random locations\");\n      const newRandomPlace = getRandomPlace();\n      setLat(newRandomPlace.lat);\n      setLon(newRandomPlace.lon);\n      updateInputs(newRandomPlace.lat, newRandomPlace.lon);\n    }\n  };\n  const updateInputs = (latitude, longitude) => {\n    const latitudeInput = document.getElementById(\"latitude\");\n    const longitudeInput = document.getElementById(\"longitude\");\n    if (latitudeInput && longitudeInput) {\n      latitudeInput.value = latitude.toFixed(6);\n      longitudeInput.value = longitude.toFixed(6);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appMainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appTitleContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"appMainTitle\",\n        children: \"TypeScript OpenWeather API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inlineForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: [\"Latitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"formInput\",\n          id: \"latitude\",\n          type: \"text\",\n          name: \"latitude\",\n          defaultValue: lat.toFixed(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: [\"Longitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"formInput\",\n          id: \"longitude\",\n          type: \"text\",\n          name: \"longitude\",\n          defaultValue: lon.toFixed(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"formButton\",\n        onClick: handleLocationChange,\n        children: \"Get Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      lat: lat,\n      lon: lon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SevenDayForecast, {\n      lat: lat,\n      lon: lon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gksm4E6u7F2DfQx3fECAJz2ZeR8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CurrentWeather","SevenDayForecast","famousPlaces","jsxDEV","_jsxDEV","getRandomPlace","randomIndex","Math","floor","random","length","App","_s","randomPlace","lat","setLat","lon","setLon","error","setError","handleLocationChange","response","fetch","process","env","REACT_APP_REVERSE_GEOCODING_API_KEY","ok","Error","data","json","latitude","location","longitude","updateInputs","newRandomPlace","latitudeInput","document","getElementById","longitudeInput","value","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","defaultValue","onClick","_c","$RefreshReg$"],"sources":["/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CurrentWeather from './Components/CurrentWeather';\nimport SevenDayForecast from './Components/SevenDayForecast';\nimport './Styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { famousPlaces } from './utils/famousPlaceCoodinates';\n\ninterface WeatherResponse {\n  coord: {\n    lon: number;\n    lat: number;\n  };\n  weather: {\n    id: number;\n    main: string;\n    description: string;\n    icon: string;\n  }[];\n  base: string;\n  main: {\n    temp: number;\n    feels_like: number;\n    temp_min: number;\n    temp_max: number;\n    pressure: number;\n    humidity: number;\n  };\n  visibility: number;\n  wind: {\n    speed: number;\n    deg: number;\n  };\n  clouds: {\n    all: number;\n  };\n  dt: number;\n  sys: {\n    type: number;\n    id: number;\n    country: string;\n    sunrise: number;\n    sunset: number;\n  };\n  timezone: number;\n  id: number;\n  name: string;\n  cod: number;\n}\n\nconst getRandomPlace = () => {\n  const randomIndex = Math.floor(Math.random() * famousPlaces.length);\n  return famousPlaces[randomIndex];\n};\n\nconst App: React.FC = () => {\n  const randomPlace = getRandomPlace();\n  const [lat, setLat] = useState<number>(randomPlace.lat);\n  const [lon, setLon] = useState<number>(randomPlace.lon);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleLocationChange = async () => {\n    try {\n      const response = await fetch(`https://api.geoapify.com/v1/ipinfo?apiKey=${process.env.REACT_APP_REVERSE_GEOCODING_API_KEY}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch geolocation data');\n      }\n      const data = await response.json();\n      const latitude = data.location.lat;\n      const longitude = data.location.lon;\n      setLat(latitude);\n      setLon(longitude);\n      updateInputs(latitude, longitude);\n    } catch (error) {\n      setError(\"Geolocation is not supported by your mobile browser. Weather from a random location will be displayed instead. Click the Get Location button to change random locations\");\n      const newRandomPlace = getRandomPlace();\n      setLat(newRandomPlace.lat);\n      setLon(newRandomPlace.lon);\n      updateInputs(newRandomPlace.lat, newRandomPlace.lon);\n    }\n  };\n\n  const updateInputs = (latitude: number, longitude: number) => {\n    const latitudeInput = document.getElementById(\"latitude\") as HTMLInputElement;\n    const longitudeInput = document.getElementById(\"longitude\") as HTMLInputElement;\n    if (latitudeInput && longitudeInput) {\n      latitudeInput.value = latitude.toFixed(6);\n      longitudeInput.value = longitude.toFixed(6);\n    }\n  };\n\n  return (\n    <div className=\"appMainContainer\">\n      <div className=\"appTitleContainer\">\n        <h1 className=\"appMainTitle\">TypeScript OpenWeather API</h1>\n      </div>\n      <form className=\"inlineForm\">\n        <label className=\"formLabel\">\n          Latitude:\n          <input className=\"formInput\" id=\"latitude\" type=\"text\" name=\"latitude\" defaultValue={lat.toFixed(6)} />\n        </label>\n        <label className=\"formLabel\">\n          Longitude:\n          <input className=\"formInput\" id=\"longitude\" type=\"text\" name=\"longitude\" defaultValue={lon.toFixed(6)} />\n        </label>\n        <button type=\"button\" className=\"formButton\" onClick={handleLocationChange}>Get Location</button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n      <CurrentWeather lat={lat} lon={lon} />\n      <SevenDayForecast lat={lat} lon={lon} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAO,kBAAkB;AACzB,OAAO,sCAAsC;AAC7C,SAASC,YAAY,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA4C7D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,YAAY,CAACQ,MAAM,CAAC;EACnE,OAAOR,YAAY,CAACI,WAAW,CAAC;AAClC,CAAC;AAED,MAAMK,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,WAAW,GAAGR,cAAc,CAAC,CAAC;EACpC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAASc,WAAW,CAACC,GAAG,CAAC;EACvD,MAAM,CAACE,GAAG,EAAEC,MAAM,CAAC,GAAGlB,QAAQ,CAASc,WAAW,CAACG,GAAG,CAAC;EACvD,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMqB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CC,OAAO,CAACC,GAAG,CAACC,mCAAmC,EAAE,CAAC;MAC5H,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;MACrD;MACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,MAAMC,QAAQ,GAAGF,IAAI,CAACG,QAAQ,CAACjB,GAAG;MAClC,MAAMkB,SAAS,GAAGJ,IAAI,CAACG,QAAQ,CAACf,GAAG;MACnCD,MAAM,CAACe,QAAQ,CAAC;MAChBb,MAAM,CAACe,SAAS,CAAC;MACjBC,YAAY,CAACH,QAAQ,EAAEE,SAAS,CAAC;IACnC,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdC,QAAQ,CAAC,yKAAyK,CAAC;MACnL,MAAMe,cAAc,GAAG7B,cAAc,CAAC,CAAC;MACvCU,MAAM,CAACmB,cAAc,CAACpB,GAAG,CAAC;MAC1BG,MAAM,CAACiB,cAAc,CAAClB,GAAG,CAAC;MAC1BiB,YAAY,CAACC,cAAc,CAACpB,GAAG,EAAEoB,cAAc,CAAClB,GAAG,CAAC;IACtD;EACF,CAAC;EAED,MAAMiB,YAAY,GAAGA,CAACH,QAAgB,EAAEE,SAAiB,KAAK;IAC5D,MAAMG,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAqB;IAC7E,MAAMC,cAAc,GAAGF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAqB;IAC/E,IAAIF,aAAa,IAAIG,cAAc,EAAE;MACnCH,aAAa,CAACI,KAAK,GAAGT,QAAQ,CAACU,OAAO,CAAC,CAAC,CAAC;MACzCF,cAAc,CAACC,KAAK,GAAGP,SAAS,CAACQ,OAAO,CAAC,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,oBACEpC,OAAA;IAAKqC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BtC,OAAA;MAAKqC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChCtC,OAAA;QAAIqC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACN1C,OAAA;MAAMqC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC1BtC,OAAA;QAAOqC,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,WAE3B,eAAAtC,OAAA;UAAOqC,SAAS,EAAC,WAAW;UAACM,EAAE,EAAC,UAAU;UAACC,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,YAAY,EAAEpC,GAAG,CAAC0B,OAAO,CAAC,CAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClG,CAAC,eACR1C,OAAA;QAAOqC,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,YAE3B,eAAAtC,OAAA;UAAOqC,SAAS,EAAC,WAAW;UAACM,EAAE,EAAC,WAAW;UAACC,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,WAAW;UAACC,YAAY,EAAElC,GAAG,CAACwB,OAAO,CAAC,CAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpG,CAAC,eACR1C,OAAA;QAAQ4C,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAACU,OAAO,EAAE/B,oBAAqB;QAAAsB,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC,EACN5B,KAAK,iBAAId,OAAA;MAAGqC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAExB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C1C,OAAA,CAACJ,cAAc;MAACc,GAAG,EAAEA,GAAI;MAACE,GAAG,EAAEA;IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtC1C,OAAA,CAACH,gBAAgB;MAACa,GAAG,EAAEA,GAAI;MAACE,GAAG,EAAEA;IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAAClC,EAAA,CAzDID,GAAa;AAAAyC,EAAA,GAAbzC,GAAa;AA2DnB,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}