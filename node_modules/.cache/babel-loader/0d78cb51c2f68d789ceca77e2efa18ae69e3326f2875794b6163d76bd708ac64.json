{"ast":null,"code":"var _jsxFileName = \"/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CurrentWeather from './Components/CurrentWeather';\nimport SevenDayForecast from './Components/SevenDayForecast';\nimport './Styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [lat, setLat] = useState(40.776764);\n  const [lon, setLon] = useState(-111.877655);\n  const handleLocationChange = event => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const latitude = parseFloat(formData.get(\"latitude\"));\n    const longitude = parseFloat(formData.get(\"longitude\"));\n    setLat(latitude);\n    setLon(longitude);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appMainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inlineForm\",\n      onSubmit: handleLocationChange,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: [\"Latitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"latitude\",\n          defaultValue: lat.toString(),\n          className: \"formInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: [\"Longitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"longitude\",\n          defaultValue: lon.toString(),\n          className: \"formInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"formButton\",\n        children: \"Set Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      lat: lat,\n      lon: lon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SevenDayForecast, {\n      lat: lat,\n      lon: lon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PrE0r5SRo+nfpuayHGuvtKaF/X4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CurrentWeather","SevenDayForecast","jsxDEV","_jsxDEV","App","_s","lat","setLat","lon","setLon","handleLocationChange","event","preventDefault","formData","FormData","currentTarget","latitude","parseFloat","get","longitude","className","children","onSubmit","type","name","defaultValue","toString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CurrentWeather from './Components/CurrentWeather';\nimport SevenDayForecast from './Components/SevenDayForecast';\nimport './Styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface WeatherResponse {\n  coord: {\n    lon: number;\n    lat: number;\n  };\n  weather: {\n    id: number;\n    main: string;\n    description: string;\n    icon: string;\n  }[];\n  base: string;\n  main: {\n    temp: number;\n    feels_like: number;\n    temp_min: number;\n    temp_max: number;\n    pressure: number;\n    humidity: number;\n  };\n  visibility: number;\n  wind: {\n    speed: number;\n    deg: number;\n  };\n  clouds: {\n    all: number;\n  };\n  dt: number;\n  sys: {\n    type: number;\n    id: number;\n    country: string;\n    sunrise: number;\n    sunset: number;\n  };\n  timezone: number;\n  id: number;\n  name: string;\n  cod: number;\n}\n\nconst App: React.FC = () => {\n  const [lat, setLat] = useState<number>(40.776764);\n  const [lon, setLon] = useState<number>(-111.877655);\n\n  const handleLocationChange = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const latitude = parseFloat(formData.get(\"latitude\") as string);\n    const longitude = parseFloat(formData.get(\"longitude\") as string);\n    setLat(latitude);\n    setLon(longitude);\n  };\n\n  return (\n    <div className=\"appMainContainer\">\n      <form className=\"inlineForm\" onSubmit={handleLocationChange}>\n        <label className=\"formLabel\">\n          Latitude:\n          <input type=\"text\" name=\"latitude\" defaultValue={lat.toString()} className=\"formInput\" />\n        </label>\n        <label className=\"formLabel\">\n          Longitude:\n          <input type=\"text\" name=\"longitude\" defaultValue={lon.toString()} className=\"formInput\" />\n        </label>\n        <button type=\"submit\" className=\"formButton\">Set Location</button>\n      </form>\n      \n      <CurrentWeather lat={lat} lon={lon} />\n      <SevenDayForecast lat={lat} lon={lon} />\n    </div>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}