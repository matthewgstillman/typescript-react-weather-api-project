{"ast":null,"code":"var _jsxFileName = \"/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/Components/CurrentWeather.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport '../Styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentWeather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=40.776764&lon=-111.877655&appid=${apiKey}&units=imperial`;\n  const apiRequest = async () => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setWeatherData(data);\n      console.log(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    apiRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TypeScript OpenWeather API Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"Location: \", weatherData.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Temperature: \", weatherData.main.temp, \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Weather: \", weatherData.weather[0].description, \" \", weatherData.weather[0].icon]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Feels like: \", weatherData.main.feels_like, \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"High: \", weatherData.main.temp_max, \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Low: \", weatherData.main.temp_min, \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Pressure: \", weatherData.main.pressure]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(CurrentWeather, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = CurrentWeather;\nexport default CurrentWeather;\nvar _c;\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"names":["useState","useEffect","Card","jsxDEV","_jsxDEV","CurrentWeather","_s","weatherData","setWeatherData","apiKey","process","env","REACT_APP_API_KEY","url","apiRequest","response","fetch","data","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Body","Title","name","Text","main","temp","weather","description","icon","feels_like","temp_max","temp_min","pressure","_c","$RefreshReg$"],"sources":["/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/Components/CurrentWeather.tsx"],"sourcesContent":["import { useState, useEffect, FC } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport '../Styles/App.css';\n\ninterface WeatherResponse {\n    coord: {\n      lon: number;\n      lat: number;\n    };\n    weather: {\n      id: number;\n      main: string;\n      description: string;\n      icon: string;\n    }[];\n    base: string;\n    main: {\n      temp: number;\n      feels_like: number;\n      temp_min: number;\n      temp_max: number;\n      pressure: number;\n      humidity: number;\n    };\n    visibility: number;\n    wind: {\n      speed: number;\n      deg: number;\n    };\n    clouds: {\n      all: number;\n    };\n    dt: number;\n    sys: {\n      type: number;\n      id: number;\n      country: string;\n      sunrise: number;\n      sunset: number;\n    };\n    timezone: number;\n    id: number;\n    name: string;\n    cod: number;\n}\n\nconst CurrentWeather: React.FC = () => {\n    const [weatherData, setWeatherData] = useState<WeatherResponse | null>(null);\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=40.776764&lon=-111.877655&appid=${apiKey}&units=imperial`;\n    \n    const apiRequest = async () => {\n        try {\n          const response = await fetch(url);\n          const data: WeatherResponse = await response.json();\n          setWeatherData(data);\n          console.log(data);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n    \n      useEffect(() => {\n        apiRequest();\n      }, []);\n    \n      return (\n        <div className=\"weatherCard\">\n          <h1>TypeScript OpenWeather API Project</h1>\n          {weatherData && (\n            <div>\n              <Card style={{ width: '18rem' }}>\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n                <Card.Body>\n                    <Card.Title>Location: {weatherData.name}</Card.Title>\n                    <Card.Text>Temperature: {weatherData.main.temp}째F</Card.Text>\n                    <Card.Text>Weather: {weatherData.weather[0].description} {weatherData.weather[0].icon}</Card.Text>\n                    <Card.Text>Feels like: {weatherData.main.feels_like}째F</Card.Text>\n                    <Card.Text>High: {weatherData.main.temp_max}째F</Card.Text>\n                    <Card.Text>Low: {weatherData.main.temp_min}째F</Card.Text>\n                    <Card.Text>Pressure: {weatherData.main.pressure}</Card.Text>\n                </Card.Body>\n            </Card>\n            </div>\n          )}\n        </div>\n      );\n}\n\nexport default CurrentWeather;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}