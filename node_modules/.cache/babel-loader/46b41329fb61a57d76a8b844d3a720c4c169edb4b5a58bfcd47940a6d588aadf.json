{"ast":null,"code":"var _jsxFileName = \"/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport axios from 'Axios';\nimport './Styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst url = `https://api.openweathermap.org/data/2.5/weather?lat=40.776764&lon=-111.877655&appid=${apiKey}`;\nconsole.log(url);\nconst App = () => {\n  _s();\n  const apiRequest = () => {\n    axios.get(url).then(response => {\n      const weather = response.data;\n      console.log(weather);\n    });\n  };\n  useEffect(() => {\n    console.log('API Key:', process.env.REACT_APP_API_KEY);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TypeScript OpenWeather API Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","axios","jsxDEV","_jsxDEV","apiKey","process","env","REACT_APP_API_KEY","url","console","log","App","_s","apiRequest","get","then","response","weather","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/App.tsx"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'Axios';\nimport './Styles/App.css';\n\ninterface WeatherResponse {\n  coord: {\n    lon: number;\n    lat: number;\n  };\n  weather: {\n    id: number;\n    main: string;\n    description: string;\n    icon: string;\n  }[];\n  base: string;\n  main: {\n    temp: number;\n    feels_like: number;\n    temp_min: number;\n    temp_max: number;\n    pressure: number;\n    humidity: number;\n  };\n  visibility: number;\n  wind: {\n    speed: number;\n    deg: number;\n  };\n  clouds: {\n    all: number;\n  };\n  dt: number;\n  sys: {\n    type: number;\n    id: number;\n    country: string;\n    sunrise: number;\n    sunset: number;\n  };\n  timezone: number;\n  id: number;\n  name: string;\n  cod: number;\n}\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst url = `https://api.openweathermap.org/data/2.5/weather?lat=40.776764&lon=-111.877655&appid=${apiKey}`;\nconsole.log(url);\n\nconst App = () => {\n  const apiRequest = () => {\n    axios.get(url)\n    .then((response) => {\n      const weather = response.data;\n      console.log(weather);\n    })\n    ;\n  }\n  useEffect(() => {\n    console.log('API Key:', process.env.REACT_APP_API_KEY);\n  }, []);\n\n  return (\n    <div className=\"mainContainer\">\n      <h1>TypeScript OpenWeather API Project</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAkBA,SAAS,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA4C1B,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC5C,MAAMC,GAAG,GAAG,uFAAuFJ,MAAM,EAAE;AAC3GK,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;AAEhB,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBZ,KAAK,CAACa,GAAG,CAACN,GAAG,CAAC,CACbO,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAI;MAC7BT,OAAO,CAACC,GAAG,CAACO,OAAO,CAAC;IACtB,CAAC,CAAC;EAEJ,CAAC;EACDjB,SAAS,CAAC,MAAM;IACdS,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEL,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BjB,OAAA;MAAAiB,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAAZ,EAAA,CAlBKD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAoBT,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}