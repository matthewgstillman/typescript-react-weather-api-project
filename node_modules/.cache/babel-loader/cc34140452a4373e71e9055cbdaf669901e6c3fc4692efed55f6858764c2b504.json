{"ast":null,"code":"var _jsxFileName = \"/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CurrentWeather from './Components/CurrentWeather';\nimport SevenDayForecast from './Components/SevenDayForecast';\nimport './Styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [lat, setLat] = useState(40.776764);\n  const [lon, setLon] = useState(-111.877655);\n  useEffect(() => {\n    // Fetch initial geolocation when component mounts\n    navigator.geolocation.getCurrentPosition(position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      setLat(latitude);\n      setLon(longitude);\n    });\n  }, []);\n  const handleLocationChange = () => {\n    // Update geolocation when button is clicked\n    navigator.geolocation.getCurrentPosition(position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      setLat(latitude);\n      setLon(longitude);\n\n      // Update input fields\n      const latitudeInput = document.getElementById(\"latitude\");\n      const longitudeInput = document.getElementById(\"longitude\");\n      if (latitudeInput && longitudeInput) {\n        latitudeInput.value = latitude.toFixed(6);\n        longitudeInput.value = longitude.toFixed(6);\n      }\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const latitude = parseFloat(formData.get(\"latitude\"));\n    const longitude = parseFloat(formData.get(\"longitude\"));\n    setLat(latitude);\n    setLon(longitude);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appMainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inlineForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: [\"Latitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"formInput\",\n          id: \"latitude\",\n          type: \"text\",\n          name: \"latitude\",\n          defaultValue: lat.toFixed(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel\",\n        children: [\"Longitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"formInput\",\n          id: \"longitude\",\n          type: \"text\",\n          name: \"longitude\",\n          defaultValue: lon.toFixed(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"formButton\",\n        onClick: handleLocationChange,\n        children: \"Get Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TypeScript OpenWeather API Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      lat: lat,\n      lon: lon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SevenDayForecast, {\n      lat: lat,\n      lon: lon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dQ5a3oUr6hOKDfFuzNES8OYVaLA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CurrentWeather","SevenDayForecast","jsxDEV","_jsxDEV","App","_s","lat","setLat","lon","setLon","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","handleLocationChange","latitudeInput","document","getElementById","longitudeInput","value","toFixed","handleSubmit","event","preventDefault","formData","FormData","currentTarget","parseFloat","get","className","children","onSubmit","id","type","name","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CurrentWeather from './Components/CurrentWeather';\nimport SevenDayForecast from './Components/SevenDayForecast';\nimport './Styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface WeatherResponse {\n  coord: {\n    lon: number;\n    lat: number;\n  };\n  weather: {\n    id: number;\n    main: string;\n    description: string;\n    icon: string;\n  }[];\n  base: string;\n  main: {\n    temp: number;\n    feels_like: number;\n    temp_min: number;\n    temp_max: number;\n    pressure: number;\n    humidity: number;\n  };\n  visibility: number;\n  wind: {\n    speed: number;\n    deg: number;\n  };\n  clouds: {\n    all: number;\n  };\n  dt: number;\n  sys: {\n    type: number;\n    id: number;\n    country: string;\n    sunrise: number;\n    sunset: number;\n  };\n  timezone: number;\n  id: number;\n  name: string;\n  cod: number;\n}\n\nconst App: React.FC = () => {\n  const [lat, setLat] = useState<number>(40.776764);\n  const [lon, setLon] = useState<number>(-111.877655);\n\n  useEffect(() => {\n    // Fetch initial geolocation when component mounts\n    navigator.geolocation.getCurrentPosition((position) => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      setLat(latitude);\n      setLon(longitude);\n    });\n  }, []);\n\n  const handleLocationChange = () => {\n    // Update geolocation when button is clicked\n    navigator.geolocation.getCurrentPosition((position) => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      setLat(latitude);\n      setLon(longitude);\n\n      // Update input fields\n      const latitudeInput = document.getElementById(\"latitude\") as HTMLInputElement;\n      const longitudeInput = document.getElementById(\"longitude\") as HTMLInputElement;\n      if (latitudeInput && longitudeInput) {\n        latitudeInput.value = latitude.toFixed(6);\n        longitudeInput.value = longitude.toFixed(6);\n      }\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const latitude = parseFloat(formData.get(\"latitude\") as string);\n    const longitude = parseFloat(formData.get(\"longitude\") as string);\n    setLat(latitude);\n    setLon(longitude);\n  };\n\n  return (\n    <div className=\"appMainContainer\">\n      <form className=\"inlineForm\" onSubmit={handleSubmit}>\n        <label className=\"formLabel\">\n          Latitude:\n          <input className=\"formInput\" id=\"latitude\" type=\"text\" name=\"latitude\" defaultValue={lat.toFixed(6)} />\n        </label>\n        <label className=\"formLabel\">\n          Longitude:\n          <input className=\"formInput\" id=\"longitude\" type=\"text\" name=\"longitude\" defaultValue={lon.toFixed(6)} />\n        </label>\n        <button type=\"button\" className=\"formButton\" onClick={handleLocationChange}>Get Location</button>\n      </form>\n      <h1>TypeScript OpenWeather API Project</h1>\n      <CurrentWeather lat={lat} lon={lon} />\n      <SevenDayForecast lat={lat} lon={lon} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}