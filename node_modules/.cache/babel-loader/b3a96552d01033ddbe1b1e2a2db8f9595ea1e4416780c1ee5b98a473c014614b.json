{"ast":null,"code":"var _jsxFileName = \"/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/Components/ReverseGeocoding.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../Styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReverseGeocoding = ({\n  lat,\n  lon\n}) => {\n  _s();\n  const [coordinatesAndInfo, setCoordinatesAndInfo] = useState(null);\n  const apiKey = process.env.REACT_APP_REVERSE_GEOCODING_API_KEY;\n  const url = `https://api.geoapify.com/v1/geocode/reverse?lat=${lat}&lon=${lon}&format=json&apiKey=${apiKey}`;\n  const apiRequest = async () => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setCoordinatesAndInfo(data);\n      console.log(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    apiRequest();\n  }, [lat, lon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ReverseGeocoding\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ReverseGeocoding, \"vQKgYeK9+bX91adBJCuYyjlamFw=\");\n_c = ReverseGeocoding;\nexport default ReverseGeocoding;\nvar _c;\n$RefreshReg$(_c, \"ReverseGeocoding\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","ReverseGeocoding","lat","lon","_s","coordinatesAndInfo","setCoordinatesAndInfo","apiKey","process","env","REACT_APP_REVERSE_GEOCODING_API_KEY","url","apiRequest","response","fetch","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/Components/ReverseGeocoding.tsx"],"sourcesContent":["import { useState, useEffect, FC } from 'react';\nimport '../Styles/App.css';\n\ninterface CoordinatesAndCityInfo {\n    lat: number;\n    lon: number;\n    name?: string;\n    city?: string;\n    country?: string;\n    address_line1?: string;\n    address_line2?: string;\n    district?: string;\n    street?: string;\n    housenumber?: string;\n    state_code?: string;\n\n}\n\nconst ReverseGeocoding: FC<CoordinatesAndCityInfo> = ({ lat, lon}) => {\n    const [coordinatesAndInfo, setCoordinatesAndInfo] = useState<CoordinatesAndCityInfo | null>(null);\n    const apiKey = process.env.REACT_APP_REVERSE_GEOCODING_API_KEY;\n    const url = `https://api.geoapify.com/v1/geocode/reverse?lat=${lat}&lon=${lon}&format=json&apiKey=${apiKey}`;\n\n    const apiRequest = async () => {\n        try {\n          const response = await fetch(url);\n          const data: CoordinatesAndCityInfo = await response.json();\n          setCoordinatesAndInfo(data);\n          console.log(data);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n    };\n\n    useEffect(() => {\n        apiRequest();\n    }, [lat, lon]);\n\n    return (\n        <div>ReverseGeocoding</div>\n    )\n}\n\nexport default ReverseGeocoding"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAY,OAAO;AAC/C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB3B,MAAMC,gBAA4C,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAG,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAgC,IAAI,CAAC;EACjG,MAAMU,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,mCAAmC;EAC9D,MAAMC,GAAG,GAAG,mDAAmDT,GAAG,QAAQC,GAAG,uBAAuBI,MAAM,EAAE;EAE5G,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MACjC,MAAMI,IAA4B,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1DV,qBAAqB,CAACS,IAAI,CAAC;MAC3BE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZc,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACV,GAAG,EAAEC,GAAG,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAAoB,QAAA,EAAK;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEnC,CAAC;AAAApB,EAAA,CAvBKH,gBAA4C;AAAAwB,EAAA,GAA5CxB,gBAA4C;AAyBlD,eAAeA,gBAAgB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}