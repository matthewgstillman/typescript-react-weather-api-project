{"ast":null,"code":"var _jsxFileName = \"/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/Components/CurrentWeather.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport '../Styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentWeather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=40.776764&lon=-111.877655&appid=${apiKey}&units=imperial`;\n  const apiRequest = async () => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setWeatherData(data);\n      console.log(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    apiRequest();\n  }, []);\n  const convertUnixTimeStamp = unix => {\n    let date = new Date(unix * 1000);\n    let hours = date.getHours();\n    let minutes = \"0\" + date.getMinutes();\n    let seconds = \"0\" + date.getSeconds();\n    let formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n    console.log(formattedTime);\n    return formattedTime;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"weatherCardHeader\",\n      children: \"TypeScript OpenWeather API Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: weatherData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Temperature: \", weatherData.main.temp, \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Weather: \", weatherData.weather[0].description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Feels like: \", weatherData.main.feels_like, \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"High: \", weatherData.main.temp_max, \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Low: \", weatherData.main.temp_min, \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Wind: \", weatherData.wind.speed, \" MPH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Sunrise: \", convertUnixTimeStamp(weatherData.sys.sunrise), \" AM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Sunset: \", convertUnixTimeStamp(weatherData.sys.sunset), \" PM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(CurrentWeather, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = CurrentWeather;\nexport default CurrentWeather;\nvar _c;\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"names":["useState","useEffect","Card","jsxDEV","_jsxDEV","CurrentWeather","_s","weatherData","setWeatherData","apiKey","process","env","REACT_APP_API_KEY","url","apiRequest","response","fetch","data","json","console","log","error","convertUnixTimeStamp","unix","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Body","Title","name","Text","main","temp","weather","description","feels_like","temp_max","temp_min","humidity","wind","speed","sys","sunrise","sunset","_c","$RefreshReg$"],"sources":["/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/Components/CurrentWeather.tsx"],"sourcesContent":["import { useState, useEffect, FC } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport '../Styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface WeatherResponse {\n    coord: {\n      lon: number;\n      lat: number;\n    };\n    weather: {\n      id: number;\n      main: string;\n      description: string;\n      icon: string;\n    }[];\n    base: string;\n    main: {\n      temp: number;\n      feels_like: number;\n      temp_min: number;\n      temp_max: number;\n      pressure: number;\n      humidity: number;\n    };\n    visibility: number;\n    wind: {\n      speed: number;\n      deg: number;\n    };\n    clouds: {\n      all: number;\n    };\n    dt: number;\n    sys: {\n      type: number;\n      id: number;\n      country: string;\n      sunrise: number;\n      sunset: number;\n    };\n    timezone: number;\n    id: number;\n    name: string;\n    cod: number;\n}\n\nconst CurrentWeather: React.FC = () => {\n    const [weatherData, setWeatherData] = useState<WeatherResponse | null>(null);\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=40.776764&lon=-111.877655&appid=${apiKey}&units=imperial`;\n    \n    const apiRequest = async () => {\n        try {\n          const response = await fetch(url);\n          const data: WeatherResponse = await response.json();\n          setWeatherData(data);\n          console.log(data);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n    \n      useEffect(() => {\n        apiRequest();\n      }, []);\n\n      const convertUnixTimeStamp = (unix: number) => {\n          let date = new Date (unix * 1000);\n          let hours = date.getHours();\n          let minutes = \"0\" + date.getMinutes();\n          let seconds = \"0\" + date.getSeconds();\n          let formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n          console.log(formattedTime);\n          return formattedTime\n      }\n    \n      return (\n        <div className=\"weatherCard\">\n          <h1 className=\"weatherCardHeader\">TypeScript OpenWeather API Project</h1>\n          {weatherData && (\n            <div>\n              <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title>{weatherData.name}</Card.Title>\n                    <Card.Text>Temperature: {weatherData.main.temp}째F</Card.Text>\n                    <Card.Text>Weather: {weatherData.weather[0].description}</Card.Text>\n                    <Card.Text>Feels like: {weatherData.main.feels_like}째F</Card.Text>\n                    <Card.Text>High: {weatherData.main.temp_max}째F</Card.Text>\n                    <Card.Text>Low: {weatherData.main.temp_min}째F</Card.Text>\n                    <Card.Text>Humidity: {weatherData.main.humidity}%</Card.Text>\n                    <Card.Text>Wind: {weatherData.wind.speed} MPH</Card.Text>\n                    <Card.Text>Sunrise: {convertUnixTimeStamp(weatherData.sys.sunrise)} AM</Card.Text>\n                    <Card.Text>Sunset: {convertUnixTimeStamp(weatherData.sys.sunset)} PM</Card.Text>\n                </Card.Body>\n            </Card>\n            </div>\n          )}\n        </div>\n      );\n}\n\nexport default CurrentWeather;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}