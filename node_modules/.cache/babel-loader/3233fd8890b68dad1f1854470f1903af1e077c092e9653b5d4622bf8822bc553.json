{"ast":null,"code":"var _jsxFileName = \"/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/Components/ReverseGeocoding.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../Styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReverseGeocoding = ({\n  lat,\n  lon\n}) => {\n  _s();\n  const [coordinatesAndInfo, setCoordinatesAndInfo] = useState(null);\n  const apiKey = process.env.REACT_APP_REVERSE_GEOCODING_API_KEY;\n  const url = `https://api.geoapify.com/v1/geocode/reverse?lat=${lat}&lon=${lon}&format=json&apiKey=${apiKey}`;\n  const apiRequest = async () => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const result = data.results[0];\n      setCoordinatesAndInfo(result);\n      console.log(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    apiRequest();\n  }, [lat, lon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: coordinatesAndInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [coordinatesAndInfo.city, \", \", coordinatesAndInfo.state_code, \" - \", coordinatesAndInfo.district, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this), \" \", coordinatesAndInfo.address_line1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 76\n        }, this), coordinatesAndInfo.address_line2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ReverseGeocoding, \"vQKgYeK9+bX91adBJCuYyjlamFw=\");\n_c = ReverseGeocoding;\nexport default ReverseGeocoding;\nvar _c;\n$RefreshReg$(_c, \"ReverseGeocoding\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","ReverseGeocoding","lat","lon","_s","coordinatesAndInfo","setCoordinatesAndInfo","apiKey","process","env","REACT_APP_REVERSE_GEOCODING_API_KEY","url","apiRequest","response","fetch","data","json","result","results","console","log","error","children","city","state_code","district","fileName","_jsxFileName","lineNumber","columnNumber","address_line1","address_line2","_c","$RefreshReg$"],"sources":["/Users/mattstillman/Desktop/react-projects/typescript-react-weather-api-project/typescript-react-weather-api-project/src/Components/ReverseGeocoding.tsx"],"sourcesContent":["import { useState, useEffect, FC } from 'react';\nimport '../Styles/App.css';\n\ninterface CoordinatesAndCityInfo {\n    lat: number;\n    lon: number;\n    name?: string;\n    city?: string;\n    country?: string;\n    address_line1?: string;\n    address_line2?: string;\n    district?: string;\n    street?: string;\n    housenumber?: string;\n    state_code?: string;\n    postcode?: string;\n    formatted?: string;\n}\n\nconst ReverseGeocoding: FC<CoordinatesAndCityInfo> = ({ lat, lon }) => {\n    const [coordinatesAndInfo, setCoordinatesAndInfo] = useState<CoordinatesAndCityInfo | null>(null);\n    const apiKey = process.env.REACT_APP_REVERSE_GEOCODING_API_KEY;\n    const url = `https://api.geoapify.com/v1/geocode/reverse?lat=${lat}&lon=${lon}&format=json&apiKey=${apiKey}`;\n\n    const apiRequest = async () => {\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            const result = data.results[0];\n            setCoordinatesAndInfo(result);\n            console.log(result);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    useEffect(() => {\n        apiRequest();\n    }, [lat, lon]);\n\n    return (\n        <div>\n            {coordinatesAndInfo && (\n                <div>\n                    <p><strong>{coordinatesAndInfo.city}, {coordinatesAndInfo.state_code} - {coordinatesAndInfo.district} </strong></p>\n                    <p><strong></strong> {coordinatesAndInfo.address_line1}<br></br>{coordinatesAndInfo.address_line2}</p>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ReverseGeocoding;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAY,OAAO;AAC/C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkB3B,MAAMC,gBAA4C,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAgC,IAAI,CAAC;EACjG,MAAMU,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,mCAAmC;EAC9D,MAAMC,GAAG,GAAG,mDAAmDT,GAAG,QAAQC,GAAG,uBAAuBI,MAAM,EAAE;EAE5G,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,MAAM,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;MAC9BZ,qBAAqB,CAACW,MAAM,CAAC;MAC7BE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZc,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACV,GAAG,EAAEC,GAAG,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAAsB,QAAA,EACKjB,kBAAkB,iBACfL,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,eAAGtB,OAAA;UAAAsB,QAAA,GAASjB,kBAAkB,CAACkB,IAAI,EAAC,IAAE,EAAClB,kBAAkB,CAACmB,UAAU,EAAC,KAAG,EAACnB,kBAAkB,CAACoB,QAAQ,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnH7B,OAAA;QAAAsB,QAAA,gBAAGtB,OAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC,KAAC,EAACxB,kBAAkB,CAACyB,aAAa,eAAC9B,OAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAACxB,kBAAkB,CAAC0B,aAAa;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrG;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAzB,EAAA,CA/BKH,gBAA4C;AAAA+B,EAAA,GAA5C/B,gBAA4C;AAiClD,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}